The homework:
create a "complex number" class with two fields: real and complex.

'real' should be a real number, and 'complex' should be a real number, such that the final complex number has the form 'r + ci' where r is real and c is complex.

write a method called "add" which can add and simplify two complex numbers in the form:
 
public ComplexNum add(ComplexNum other){
	// Code happens
}

Then write functions to subtract, multiply, and divide.

This class also needs a "root of unity" function, which takes two numbers, n and k. This function should take the unit circle in the complex plane, distribute k points evenly around the circle at roots of unity, and find the complex coordinate of the nth point.

Also write a "polynomial" class with one field: an array of ComplexNumbers called coefficients, and a method called 'public ComplexNum evaluate(ComplexNum x)' which evaluates this polynomial at the point designated by the input, and returns the result.


Notes on complex number:
A complex number has a real and imaginary component which are added together to form a coordinate in the complex plane. The complex plane is like an xy plane but the y dimension is actually the i dimension.

Complex numbers are also represented by their polar coordinate forms. There is the angle and the magnitude. The x and y coordinates are therefore rcos(theta) and rsin(theta) respectively.

Raising a complex number to an integer power is done by taking the polar coordinate representation of the complex number. Then, multiply the angle by the integer and exponentiate the magnitude by the ingeger.