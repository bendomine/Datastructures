Notes on complex number:
A complex number has a real and imaginary component which are added together to form a coordinate in the complex plane. The complex plane is like an xy plane but the y dimension is actually the i dimension.

Complex numbers are also represented by their polar coordinate forms. There is the angle and the magnitude. The x and y coordinates are therefore rcos(theta) and rsin(theta) respectively.

Raising a complex number to an integer power is done by taking the polar coordinate representation of the complex number. Then, multiply the angle by the integer and exponentiate the magnitude by the ingeger.

Notes on roots of unity:
The roots of unity can be defined by the following formula: e^(i2kpi/8) where k is a point around the unit circle (at 0 radians, k is 0). The 8 is the number of points around the circle, in this case there are 8 points. You want the number of points in the circle, or k, to be equal to the number of terms in the input polynomial. For a fourier transform, take the polynomial representing the formula, and evaulate it at each of these roots of unity. Each evaluation gets one element of the fourier transform.

FAST Fourier transform (speeeeeeeeeeeeeeeeeeeeeeed):
Normal fourier transforms require O(n) steps. FAST fourier transforms require O(log(n)) steps. 
Given the polynomial:
ax^7 + bx^6 + cx^5 + dx^4 + ex^3 + fx^2 + gx + h
create two smaller polynomials, one with the even terms, and one with the odd terms. Also, divide the exponents of each by two (rounding down).
So:
v(x) = bx^3 + dx^2 + fx + h
and
u(x) = ax^3 + cx^2 + ex + g

note that v(x^2) + u(x^2) * x is the original polynomial

So anyway, take the initial fourier transform (say of 3, 1, 4, 1) and recursively do the fourier transform of the even terms and the odd terms.

so FFT(3, 1, 4, 1)
==> FFT(3, 4) and FFT(1, 1)

==> FFT(3) and FFT(4) and FFT(1) and FFT(1)

Once we are down to one term, we compute the discrete fourier transform. In other words, we evaluate this term at the roots of unity, except since we have only one term, the only root of unity is 1. So, the fourier transform of 3 is 3. Now we just need to recombine these terms. We have the fourier transform of a bunch of components which need to be put back together. 

So how do we combine them? Take each most recent pair and create two numbers: one from adding them together, and one from subtracting them.